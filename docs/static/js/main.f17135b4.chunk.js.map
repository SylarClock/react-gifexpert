{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExportApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExport","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAkB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,QCPnBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDV,SAAEA,GAAe,IAAD,EAEfrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyBzC,OAjBAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAM,SAAAC,GAEHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAOtB,CAACb,IAGGc,EDtB0BK,CAAanB,GAAjCU,EAFsB,EAE3BJ,KAAaO,EAFc,EAEdA,QAGrB,OACI,qCACI,6BAAMb,IACJa,GAAW,mBAAGjB,UAAU,0DAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIhB,aEkBvB2B,EA/BG,WAAK,MAGiBzC,mBAAS,CAAC,oBAH3B,mBAGZ0C,EAHY,KAGA3C,EAHA,KAUnB,OACI,qCACI,2CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCnBjCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f17135b4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) =>{\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cat => [inputValue,...cat] );\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </ form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=2qcaddK0enSMIUuvf6G82kFYu6V67Nyx`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url//el simbolo de interrogacion es para traer si tiene y si no tiene nada no hace nada\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n    \n\n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p className=\"animate__animated animate__heartBeat animate__infinite \">Loading...</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react' \nimport { getGifs } from '../helpers/getGifs';\n\n\n export const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    //los useEffects no pueden ser async porque esperan algo sincrono\n    useEffect( () => {\n        \n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n            });\n\n\n\n    }, [category])\n\n    \n    return state;\n\n }","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifExport = () =>{\n\n    //const categories = ['Hunter x Hunter', 'Jujutsu kaisen', 'Mob psycho'];\n    const [categories, setCategories] = useState(['Hunter x Hunter'])\n    \n    // const handleAdd = () => {\n    //     //setCategories([...categories, 'One piece']);\n    //     setCategories( cats => [...cats, 'One punch']);\n    // }\n\n    return (\n        <>\n            <h2>GifExport</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category =>\n                        <GifGrid\n                            key={category} \n                            category={category} \n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n\n}\n\nexport default GifExport","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExport from './GifExportApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExport />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}